{"version":3,"sources":["utils/API.js","components/SearchForm/index.js","components/SaveBtn/index.js","components/SearchResults/index.js","pages/Search.js","pages/Saved.js","components/Navbar/index.js","components/Wrapper/index.js","App.js","registerServiceWorker.js","index.js"],"names":["API","search","query","axios","get","params","q","saveBook","bookData","post","SearchForm","props","react_default","a","createElement","className","htmlFor","value","onChange","handleInputChange","name","list","type","placeholder","id","onClick","handleFormSubmit","SaveBtn","handleSave","SearchResults","console","log","result","map","data","i","key","concat","volumeInfo","imageLinks","src","thumbnail","title","authors","description","href","previewLink","components_SaveBtn","Search","state","searchBooks","then","res","_this","setState","items","catch","err","event","target","preventDefault","this","components_SearchForm","components_SearchResults","Component","Saved","Navbar","react_router_dom","to","window","location","pathname","Wrapper","Object","assign","App","components_Navbar","components_Wrapper","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ebbb20be.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// The search method retrieves books from the server\r\n// It accepts a \"query\" or term to search the google api for \r\nexport default {\r\n    search: function (query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?\", { params: { q: query } });\r\n    },\r\n    saveBook: function (bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n    }\r\n};\r\n\r\n// import axios from \"axios\";\r\n// const BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n// // const APIKEY = \"&apikey=trilogy\";\r\n\r\n// export default {\r\n//     search: function (query) {\r\n//         return axios.get(BASEURL + query);\r\n//     }\r\n// };","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchForm(props) {\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"book\">Book Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"books\"\n          list=\"books\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Type in a book\"\n          id=\"breed\"\n        />\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction SaveBtn(props) {\n  return (\n    <button type=\"submit\" onClick={props.handleSave} className=\"btn btn-success\">\n      Save\n        </button>\n  );\n}\n\nexport default SaveBtn;\n","import React from \"react\";\nimport \"./style.css\";\nimport SaveBtn from \"../SaveBtn\";\n\nfunction SearchResults(props) {\n  console.log(props.result);\n\n  return (\n    //issue: for some searches theres a issue with images - Harry potter and how to kill a mockingbird - auhtors\n    <ul className=\"list-group search-results\">\n      {props.result.map((data, i) => (\n        <li key={`book${i}`} className=\"list-group-item\">\n          {data.volumeInfo.imageLinks ? <img src={data.volumeInfo.imageLinks.thumbnail} /> : <p>No image</p>}\n          <h3>Title: {data.volumeInfo.title}</h3>\n          <h4>Author: </h4>\n          {data.volumeInfo.authors ? <p>{data.volumeInfo.authors[0]}</p> : <p>No Authors</p>}\n\n          <h4>Description</h4> <p>{data.volumeInfo.description}</p>\n          <h4>Preview Link</h4> <p> <a href={data.volumeInfo.previewLink}></a></p>\n\n          <SaveBtn />\n          {/* <p><img alt=\"Book\" src={data.volumeInfo.imageLinks.thumbnail} className=\"img-fluid\" /></p> */}\n        </li>\n\n      ))\n      }\n    </ul >\n\n\n  );\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResults from \"../components/SearchResults\";\r\n\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        result: [],\r\n        search: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchBooks(\"Becoming\");\r\n    }\r\n\r\n    searchBooks = query => {\r\n        API.search(query)\r\n            .then(res => this.setState({ result: res.data.items }))\r\n            .then(data => {\r\n                console.log(this.state.result[0].volumeInfo.title);\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value });\r\n\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchBooks(this.state.search);\r\n\r\n    };\r\n\r\n    handleSave = event => {\r\n        event.preventDefault();\r\n        console.log(\"Save the title, descriptin, and save = true\");\r\n\r\n    }\r\n    //save form Submit \r\n    //     if(this.state.title && this.state.author) {\r\n    //     API.saveBook({\r\n    //         title: this.state.title,\r\n    //         author: this.state.author,\r\n    //         synopsis: this.state.synopsis\r\n    //     })\r\n    //         .then(res => this.loadBooks())\r\n    //         .catch(err => console.log(err));\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Search Page</h1>\r\n                <h3> {this.state.search}</h3>\r\n\r\n                <SearchForm\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <SearchResults result={this.state.result} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;\r\n\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Saved extends Component {\r\n    render() {\r\n        return (\r\n            <div>Save page</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Google Book Search\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/saved\"\n              className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Saved\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Navbar />\n          <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </Wrapper>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}